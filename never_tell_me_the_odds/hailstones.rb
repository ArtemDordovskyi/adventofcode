require 'benchmark'
require 'numo/linalg'

file = File.open("input.txt")
hailstones = []
file.each do |line|
  hailstones.push(line.gsub(" ","").gsub("@",",").split(",").map(&:to_i))
end

h0 = hailstones[0]
h1 = hailstones[1]
h2 = hailstones[2]

a = [
  [h1[4] - h0[4], h0[3] - h1[3], 0.0, h0[1] - h1[1], h1[0] - h0[0], 0.0],
  [h2[4] - h0[4], h0[3] - h2[3], 0.0, h0[1] - h2[1], h2[0] - h0[0], 0.0],
  [h1[5] - h0[5], 0.0, h0[3] - h1[3], h0[2] - h1[2], 0.0, h1[0] - h0[0]],
  [h2[5] - h0[5], 0.0, h0[3] - h2[3], h0[2] - h2[2], 0.0, h2[0] - h0[0]],
  [0.0, h1[5] - h0[5], h0[4] - h1[4], 0.0, h0[2] - h1[2], h1[1]- h0[1]],
  [0.0, h2[5] - h0[5], h0[4] - h2[4], 0.0, h0[2] - h2[2], h2[1] - h0[1]]
]

b = [
  (h0[1] * h0[3] - h1[1] * h1[3]) - (h0[0] * h0[4] - h1[0] * h1[4]),
  (h0[1] * h0[3] - h2[1] * h2[3]) - (h0[0] * h0[4] - h2[0] * h2[4]),
  (h0[2] * h0[3] - h1[2] * h1[3]) - (h0[0] * h0[5] - h1[0] * h1[5]),
  (h0[2] * h0[3] - h2[2] * h2[3]) - (h0[0] * h0[5] - h2[0] * h2[5]),
  (h0[2] * h0[4] - h1[2] * h1[4]) - (h0[1] * h0[5] - h1[1] * h1[5]),
  (h0[2] * h0[4] - h2[2] * h2[4]) - (h0[1] * h0[5] - h2[1] * h2[5])
]

r = Numo::Linalg.solve(a, b)

puts r[0] + r[1] + r[2]

